#!/usr/bin/env python
import argparse
import subprocess


class DeploymentError(Exception):
    def __init__(self, title, message):
        self.title = title
        self.message = message


def check_openshift_auth():
    result = subprocess.run(
        ['oc', 'whoami'],
        stderr=subprocess.PIPE,
        stdout=subprocess.DEVNULL
    )
    if result.returncode != 0:
        raise DeploymentError('OpenShift Auth Failed',
                              result.stderr.decode('utf-8'))


def check_docker_auth():
    cmd = 'docker login -u openshift -p $(oc whoami -t) openshift-registry.web.cern.ch'
    result = subprocess.run(
        cmd,
        shell=True,
        stdout=subprocess.PIPE,
        stderr=subprocess.DEVNULL
    )
    msg = result.stdout.decode('utf-8')
    if msg != 'Login Succeeded\n':
        raise DeploymentError('Docker Auth Failed',
                              result.stdout.decode('utf-8'))


def build_docker_image():
    pass


def setup():
    parser = argparse.ArgumentParser()
    parser.add_argument('--verbose', '-v', help='verbose output messages')

    return parser.parse_args()


if __name__ == '__main__':
    try:
        check_openshift_auth()
        check_docker_auth()

        args = setup()

        build_docker_image()
    except DeploymentError as de:
        print('[{title}] {msg}'.format(title=de.title, msg=de.message))
